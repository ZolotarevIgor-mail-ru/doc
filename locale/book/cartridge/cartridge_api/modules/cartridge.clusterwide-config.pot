
msgid "Module *cartridge.clusterwide-config*"
msgstr ""

msgid "The abstraction, representing clusterwide configuration."
msgstr ""

msgid "Clusterwide configuration is more than just a lua table. It's an object in terms of OOP paradigm."
msgstr ""

msgid "On filesystem clusterwide config is represented by a file tree."
msgstr ""

msgid "In Lua it's represented as an object which holds both plaintext files content and unmarshalled lua tables. Unmarshalling is implicit and performed automatically for the sections with  ``.yml``  file extension."
msgstr ""

msgid "To access plaintext content there are two functions: `get_plaintext` and  ``set_plaintext`` ."
msgstr ""

msgid "Unmarshalled lua tables are accessed without  ``.yml``  extension by ``get_readonly``  and  ``get_deepcopy`` . Plaintext serves for accessing unmarshalled representation of corresponding sections."
msgstr ""

msgid "To avoid ambiguity it's prohibited to keep both `<FILENAME>` and `<FILENAME>.yml` in the configuration. An attempt to do so would result in `return nil, err` from `new()` and `load()`, and an attempt to call  ``get_readonly/deepcopy``  would raise an error. Nevertheless one can keep any other extensions because they aren't unmarshalled implicitly."
msgstr ""

msgid "(**Added** in v1.2.0-17)"
msgstr ""

msgid "Usage:"
msgstr ""

msgid "tarantool> cfg = ClusterwideConfig.new({\n"
"         >     -- two files\n"
"         >     ['forex.yml'] = '{EURRUB_TOM: 70.33, USDRUB_TOM: 63.18}',\n"
"         >     ['text'] = 'Lorem ipsum dolor sit amet',\n"
"         > })\n"
"---\n"
"...\n"
"\n"
"tarantool> cfg:get_plaintext()\n"
"---\n"
"- text: Lorem ipsum dolor sit amet\n"
"  forex.yml: '{EURRUB_TOM: 70.33, USDRUB_TOM: 63.18}'\n"
"...\n"
"\n"
"tarantool> cfg:get_readonly()\n"
"---\n"
"- forex.yml: '{EURRUB_TOM: 70.33, USDRUB_TOM: 63.18}'\n"
"  forex:\n"
"    EURRUB_TOM: 70.33\n"
"    USDRUB_TOM: 63.18\n"
"  text: Lorem ipsum dolor sit amet\n"
"..."
msgstr ""

msgid "Functions"
msgstr ""

msgid "new ([data])"
msgstr ""

msgid "Create new object."
msgstr ""

msgid "**Parameters:**"
msgstr ""

msgid "*data:* (`{string=string,...} <https://www.lua.org/manual/5.3/manual.html#6.4>`_) Plaintext content (optional)"
msgstr ""

msgid "**Returns**:"
msgstr ""

msgid "(**ClusterwideConfig**)"
msgstr ""

msgid "**Or**"
msgstr ""

msgid "(**nil**)"
msgstr ""

msgid "(`table <https://www.lua.org/manual/5.3/manual.html#6.6>`_) Error description"
msgstr ""

msgid "save (clusterwide_config, filename)"
msgstr ""

msgid "Write configuration to filesystem."
msgstr ""

msgid "Write atomicity is achieved by splitting it into two phases: 1. Configuration is saved with a random filename in the same directory 2. Temporal filename is renamed to the destination"
msgstr ""

msgid "*clusterwide_config:* (**ClusterwideConfig**)"
msgstr ""

msgid "*filename:* (`string <https://www.lua.org/manual/5.3/manual.html#6.4>`_)"
msgstr ""

msgid "(**boolean**) true"
msgstr ""

msgid "load (filename)"
msgstr ""

msgid "Load object from filesystem."
msgstr ""

msgid "This function handles both old-style single YAML and new-style directory with a file tree."
msgstr ""

msgid "Local Functions"
msgstr ""

msgid "load_from_file (filename)"
msgstr ""

msgid "Load old-style config from YAML file."
msgstr ""

msgid "*filename:* (`string <https://www.lua.org/manual/5.3/manual.html#6.4>`_) Filename to load."
msgstr ""

msgid "load_from_dir (path)"
msgstr ""

msgid "Load new-style config from a directory."
msgstr ""

msgid "*path:* (`string <https://www.lua.org/manual/5.3/manual.html#6.4>`_) Path to the config."
msgstr ""

msgid "remove (string)"
msgstr ""

msgid "Remove config from filesystem atomically."
msgstr ""

msgid "The atomicity is achieved by splitting it into two phases: 1. Configuration is saved with a random filename in the same directory 2. Temporal filename is renamed to the destination"
msgstr ""

msgid "*string:* (**path**) Directory path to remove."
msgstr ""

