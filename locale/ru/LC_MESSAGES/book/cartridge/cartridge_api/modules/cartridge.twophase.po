
msgid "Module *cartridge.twophase*"
msgstr ""

msgid "Clusterwide configuration propagation two-phase algorithm."
msgstr ""

msgid "(**Added** in v1.2.0-19)"
msgstr ""

msgid "Functions"
msgstr ""

msgid "patch_clusterwide (patch)"
msgstr ""

msgid ""
"Edit the clusterwide configuration. Top-level keys are merged with the "
"current configuration. To remove a top-level section, use "
"``patch_clusterwide{key = box.NULL}`` ."
msgstr ""

msgid "The function uses a two-phase commit algorithm with the following steps:"
msgstr ""

msgid "Patches the current configuration."
msgstr ""

msgid "Validates topology on the current server."
msgstr ""

msgid ""
"III. Executes the preparation phase ( ``prepare_2pc`` ) on every server "
"excluding expelled and disabled servers."
msgstr ""

msgid ""
"IV. If any server reports an error, executes the abort phase ( "
"``abort_2pc`` ). All servers prepared so far are rolled back and "
"unlocked."
msgstr ""

msgid ""
"V. Performs the commit phase ( ``commit_2pc`` ). In case the phase fails,"
" an automatic rollback is impossible, the cluster should be repaired "
"manually."
msgstr ""

msgid "**Parameters:**"
msgstr ""

msgid "*patch:* (`table <https://www.lua.org/manual/5.3/manual.html#6.6>`_)"
msgstr ""

msgid "**Returns**:"
msgstr ""

msgid "(**boolean**) true"
msgstr ""

msgid "**Or**"
msgstr ""

msgid "(**nil**)"
msgstr ""

msgid ""
"(`table <https://www.lua.org/manual/5.3/manual.html#6.6>`_) Error "
"description"
msgstr ""

msgid "get_schema ()"
msgstr ""

msgid "Get clusterwide DDL schema."
msgstr ""

msgid "(**Added** in v1.2.0-28)"
msgstr ""

msgid ""
"(`string <https://www.lua.org/manual/5.3/manual.html#6.4>`_) Schema in "
"YAML format"
msgstr ""

msgid "set_schema (schema)"
msgstr ""

msgid "Apply clusterwide DDL schema."
msgstr ""

msgid ""
"*schema:* (`string <https://www.lua.org/manual/5.3/manual.html#6.4>`_) in"
" YAML format"
msgstr ""

msgid ""
"(`string <https://www.lua.org/manual/5.3/manual.html#6.4>`_) The same new"
" schema"
msgstr ""

msgid "Local Functions"
msgstr ""

msgid "prepare_2pc (data)"
msgstr ""

msgid "Two-phase commit - preparation stage."
msgstr ""

msgid ""
"Validate the configuration and acquire a lock setting local variable and "
"writing \"config.prepare.yml\" file. If the validation fails, the lock "
"isn't acquired and doesn't have to be aborted."
msgstr ""

msgid ""
"*data:* (`table <https://www.lua.org/manual/5.3/manual.html#6.6>`_) "
"clusterwide config content"
msgstr ""

msgid "commit_2pc ()"
msgstr ""

msgid "Two-phase commit - commit stage."
msgstr ""

msgid ""
"Back up the active configuration, commit changes to filesystem by "
"renaming prepared file, release the lock, and configure roles. If any "
"errors occur, configuration is not rolled back automatically. Any problem"
" encountered during this call has to be solved manually."
msgstr ""

msgid "abort_2pc ()"
msgstr ""

msgid "Two-phase commit - abort stage."
msgstr ""

msgid "Release the lock for further commit attempts."
msgstr ""

#~ msgid "*patch:* (`table <https://www.lua.org/manual/5.1/manual.html#5.5>`_)"
#~ msgstr ""

#~ msgid ""
#~ "(`table <https://www.lua.org/manual/5.1/manual.html#5.5>`_) "
#~ "Error description"
#~ msgstr ""

#~ msgid ""
#~ "(`string <https://www.lua.org/manual/5.1/manual.html#5.4>`_) "
#~ "Schema in YAML format"
#~ msgstr ""

#~ msgid ""
#~ "*schema:* (`string "
#~ "<https://www.lua.org/manual/5.1/manual.html#5.4>`_) in "
#~ "YAML format"
#~ msgstr ""

#~ msgid ""
#~ "(`string <https://www.lua.org/manual/5.1/manual.html#5.4>`_) "
#~ "The same new schema"
#~ msgstr ""

#~ msgid "on_patch (trigger_new, trigger_old)"
#~ msgstr ""

#~ msgid "Set up trigger for for patch_clusterwide."
#~ msgstr ""

#~ msgid "It will be executed **before** new new config applied."
#~ msgstr ""

#~ msgid ""
#~ "If the parameters are  ``(nil, "
#~ "old_trigger)`` , then the old trigger"
#~ " is deleted."
#~ msgstr ""

#~ msgid ""
#~ "The trigger function is called with "
#~ "two argument: -  ``conf_new``  ( "
#~ "``ClusterwideConfig`` ) -  ``conf_old``  ( "
#~ "``ClusterWideConfig`` )"
#~ msgstr ""

#~ msgid ""
#~ "It is allowed to modify  ``conf_new``"
#~ " , but not  ``conf_old`` . Return "
#~ "values are ignored. If calling a "
#~ "trigger raises an error, ``patch_clusterwide``"
#~ "  returns it as  ``nil, err`` ."
#~ msgstr ""

#~ msgid "(**Added** in v2.1.0-4)"
#~ msgstr ""

#~ msgid "*trigger_new:* (**function**)"
#~ msgstr ""

#~ msgid "*trigger_old:* (**function**)"
#~ msgstr ""

#~ msgid "Usage:"
#~ msgstr ""

#~ msgid ""
#~ "local function inject_data(conf_new, _)\n"
#~ "    local data_yml = yaml.encode({foo = 'bar'})\n"
#~ "    conf_new:set_plaintext('data.yml', data_yml)\n"
#~ "end)\n"
#~ "\n"
#~ "twophase.on_patch(inject_data) -- set custom patch modifier trigger\n"
#~ "twophase.on_patch(nil, inject_data) -- drop trigger"
#~ msgstr ""

#~ msgid ""
#~ "*data:* (`table "
#~ "<https://www.lua.org/manual/5.1/manual.html#5.5>`_) clusterwide"
#~ " config content"
#~ msgstr ""
