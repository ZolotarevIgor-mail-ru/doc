
msgid "Changelog"
msgstr ""

msgid "All notable changes to this project will be documented in this file."
msgstr ""

msgid ""
"The format is based on `Keep a Changelog "
"<http://keepachangelog.com/en/1.0.0/>`_ and this project adheres to "
"`Semantic Versioning <http://semver.org/spec/v2.0.0.html>`_."
msgstr ""

msgid "[Unreleased]"
msgstr ""

msgid "Added"
msgstr ""

msgid "Show \"You are here\" marker in webui."
msgstr ""

msgid ""
"Respect `box.cfg` options `wal_dir`, `memtx_dir`, `vinyl_dir`. They can "
"be either absolute or relative - in the later case it's calculated "
"relative to `cartridge.workdir`."
msgstr ""

msgid "Implement stateful failover mode."
msgstr ""

msgid "Add new field Graphql field `cluster{ issues {topic} }`"
msgstr ""

msgid "Extend issues API for stateful failover"
msgstr ""

msgid ""
"New option in `cartridge.cfg({upgrade_schema=...}, ...)` to perform auto "
"upgrade schema to actual tarantool version (only for leader). It also has"
" bean added for `argparse`."
msgstr ""

msgid ""
"GraphQL validation significantly improved: scalar values can't have "
"subselections; composite types must have subselections; omitting non-"
"nullable arguments in variable list is forbidden."
msgstr ""

msgid "Indicate replication and failover issues in WebUI."
msgstr ""

msgid "Deprecated"
msgstr ""

msgid "Lua API:"
msgstr ""

msgid "`cartridge.admin_get_failover` -> `cartridge.failover_get_params`"
msgstr ""

msgid ""
"`cartridge.admin_enable/disable_failover` -> "
"`cartridge.failover_set_params`"
msgstr ""

msgid "GraphQL API:"
msgstr ""

msgid ""
"`query {cluster {failover} }` -> `query {cluster {failover_params {...} }"
" }`"
msgstr ""

msgid ""
"`mutation {cluster {failover()} }` -> `mutation {cluster "
"{failover_params() {...} } }`"
msgstr ""

msgid "Fixed"
msgstr ""

msgid "Fix quering failure `cluster {issues {...} }` on uninitialized instance"
msgstr ""

msgid "[2.0.2] - 2020-03-17"
msgstr ""

msgid ""
"Expose membership options in `argparse` module (edit them with "
"environment variables and command-line arguments)."
msgstr ""

msgid "New internal module to handle `.tar` files."
msgstr ""

msgid ""
"`cartridge.cfg({webui_blacklist = {'/admin/code', ...}})`: blacklist "
"certain WebUI pages."
msgstr ""

msgid "`cartridge.get_schema()` referencing older `_G.cartridge_get_schema`."
msgstr ""

msgid "`cartridge.set_schema()` referencing older `_G.cartridge_set_schema`."
msgstr ""

msgid ""
"Make use of GraphQL error extensions: provide additional information "
"about `class_name` and `stack` of original error."
msgstr ""

msgid ""
"`cluster{ issues{ level message ... }}`: obtain more details on "
"replication status"
msgstr ""

msgid "`cluster{ self {...} }`: new fields `app_name`, `instance_name`."
msgstr ""

msgid ""
"`servers{ boxinfo { cartridge {...} }}`: new fields `version`, `state`, "
"`error`."
msgstr ""

msgid "Test helpers:"
msgstr ""

msgid "Allow specifying `all_rw` replicaset flag in luatest helpers."
msgstr ""

msgid ""
"Add `cluster({env = ...})` option for specifying clusterwide environment "
"variables."
msgstr ""

msgid "Changed"
msgstr ""

msgid "Remove redundant topology availability checks from two-phase commit."
msgstr ""

msgid ""
"Prevent instance state transition from `ConnectingFullmesh` to "
"`OperationError` if replication fails to connect or to sync. Since now "
"such fails result in staying in `ConnectingFullmesh` state until it "
"succeeds."
msgstr ""

msgid ""
"Specifying `pool.connect()` options `user`, `password`, `reconnect_after`"
" are deprecated and ignored, they never worked as intended and will never"
" do. Option `connect_timeout` is deprecated, but for backward "
"compatibility treated as `wait_connected`."
msgstr ""

msgid "Fix DDL failure if `spaces` field is `null` in input schema."
msgstr ""

msgid ""
"Check content of `cluster_cookie` for absence of special characters so it"
" doesn't break the authorization. Allowed symbols are `[a-zA-Z0-9_.~-]`."
msgstr ""

msgid ""
"Drop remote-control connections after full-featured `box.cfg` becomes "
"available to prevent clients from using limited functionality for too "
"long. During instance recovery remote-control won't accept any "
"connections: clients wait for box.cfg to finish recovery."
msgstr ""

msgid ""
"Update errors rock dependency to 2.1.2: eliminate duplicate stack trace "
"from `error.str` field."
msgstr ""

msgid "Apply `custom_proc_title` setting without waiting for `box.cfg`."
msgstr ""

msgid "Make GraphQL compatible with `req:read_cached()` call in httpd hooks."
msgstr ""

msgid ""
"Avoid \"attempt to index nil value\" error when using rpc on an "
"uninitialized instance."
msgstr ""

msgid "Enhanced in WebUI"
msgstr ""

msgid "Add an ability to hide certain WebUI pages."
msgstr ""

msgid "Validate YAML in code editor WebUI."
msgstr ""

msgid "Fix showing errors in Code editor page."
msgstr ""

msgid ""
"Remember last open file in Code editor page. Open first file when local "
"storage is empty."
msgstr ""

msgid "Expand file tree in Code editor page by default."
msgstr ""

msgid "Show Cartridge version in server info dialog."
msgstr ""

msgid "Server alias is clickable in replicaset list."
msgstr ""

msgid "Show networking errors in splash panel instead of notifications."
msgstr ""

msgid "Accept float values for vshard-storage weight."
msgstr ""

msgid "[2.0.1] - 2020-01-15"
msgstr ""

msgid ""
"Expose `TARANTOOL_DEMO_URI` environment variable in GraphQL query "
"`cluster{ self{demo_uri} }` for demo purposes."
msgstr ""

msgid "Notifications in schema editor WebUI."
msgstr ""

msgid "Fix GraphQL `servers` query compatibility with old cartridge versions."
msgstr ""

msgid "Two-phase commit backward compatibility with v1.2.0."
msgstr ""

msgid "[2.0.0] - 2019-12-27"
msgstr ""

msgid ""
"Use for frontend part single point of configuration HTTP handlers. As "
"example: you can add your own client HTTP middleware for auth."
msgstr ""

msgid ""
"Built-in DDL schema management. Schema is a part of clusterwide "
"configuration. It's applied to every instance in cluster."
msgstr ""

msgid "DDL schema editor and code editor pages in WebUI."
msgstr ""

msgid ""
"Instances now have internal state machine which helps to manage cluster "
"operation and protect from invalid state transitions."
msgstr ""

msgid "WebUI checkbox to specify `all_rw` replicaset property."
msgstr ""

msgid "GraphQL API for clusterwide configuration management."
msgstr ""

msgid ""
"Measure clock difference across instances and provide `clock_delta` in "
"GraphQL `servers` query and in `admin.get_servers()` Lua API."
msgstr ""

msgid ""
"New option in `rpc_call(..., {uri=...})` to perform a call on a "
"particular uri."
msgstr ""

msgid ""
"`cartridge.rpc_get_candidates()` doesn't return error \"No remotes with "
"role available\" anymore, empty table is returned instead."
msgstr ""

msgid "**(incompatible change)**"
msgstr ""

msgid ""
"Base advertise port in luatest helpers changed from 33000 to 13300, which"
" is outside `ip_local_port_range`. Using port from local range usually "
"caused tests failing with an error \"address already in use\". "
"(*incompatible change*, but affects tests only)"
msgstr ""

msgid ""
"Whole new way to bootstrap instances. Instead of polling membership for "
"getting clusterwide config the instance now start Remote Control Server "
"(with limited iproto protocol functionality) on the same port. Two-phase "
"commit is then executed over net.box connection. (**major change**, but "
"still compatible)"
msgstr ""

msgid "Failover isn't triggered on `suspect` instance state anymore"
msgstr ""

msgid ""
"Functions `admin.get_servers`, `get_replicasets` and similar GraphQL "
"queries now return an error if the instance handling the request is in "
"state `InitError` or `BootError`."
msgstr ""

msgid ""
"Clusterwide configuration is now represented with a file tree. All "
"sections that were tables are saved to separate `.yml` files. "
"Compatibility with the old-style configuration is preserved. Accessing "
"unmarshalled sections with `get_readonly/deepcopy` methods is provided "
"without `.yml` extension as earlier. (**major change**, but still "
"compatible)"
msgstr ""

msgid ""
"After an old leader restarts it'll try to sync with an active one before "
"taking the leadership again so that failover doesn't switch too early "
"before leader finishes recovery. If replication setup fails the instance "
"enters the `OperationError` state, which can be avoided by explicitly "
"specifying `replication_connect_quorum = 1` (or 0)."
msgstr ""

msgid "**(major change)**"
msgstr ""

msgid ""
"Option `{prefer_local = false}` in `rpc_call` makes it always use netbox "
"connection, even to connect self. It never tries to perform call locally."
msgstr ""

msgid "Update `vshard` dependency to 0.1.14."
msgstr ""

msgid "Removed"
msgstr ""

msgid ""
"Function `cartridge.bootstrap` is removed. Use `admin_edit_topology` "
"interad. **(incompatible change)**"
msgstr ""

msgid ""
"Misspelled role callback `validate` is now removed completely. Keep using"
" `validate_config`."
msgstr ""

msgid ""
"Arrange proper failover triggering: don't miss events, don't trigger if "
"nothing changed. Fix races in calling `apply_config` between failover and"
" two-phase commit."
msgstr ""

msgid "Race condition when creating working directory."
msgstr ""

msgid ""
"Hide users page in WebUI when auth backend implements no user management "
"functions. Enable auth switcher is displayed on main cluster page in this"
" case."
msgstr ""

msgid "Displaying boolean values in server details."
msgstr ""

msgid "Add deduplication for WebUI notifications: no more spam."
msgstr ""

msgid ""
"Automatically choose default vshard group in create and edit replicaset "
"modals."
msgstr ""

msgid "Enhance WebUI modals scrolling."
msgstr ""

msgid "[1.2.0] - 2019-10-21"
msgstr ""

msgid "'Auto' placeholder to weight input in the Replicaset forms."
msgstr ""

msgid ""
"'Select all' and 'Deselect all' buttons to roles field in Replicaset add "
"and edit forms."
msgstr ""

msgid ""
"Refresh replicaset list in UI after topology edit actions: bootstrap, "
"join, expel, probe, replicaset edit."
msgstr ""

msgid ""
"New Lua API `cartridge.http_authorize_request()` suitable for checking "
"HTTP request headers."
msgstr ""

msgid ""
"New Lua API `cartridge.http_render_response()` for generating HTTP "
"response with proper `Set-Cookie` headers."
msgstr ""

msgid ""
"New Lua API `cartridge.http_get_username()` to check authorization of "
"active HTTP session."
msgstr ""

msgid ""
"New Lua API `cartridge.rpc_get_candidates()` to get list of instances "
"suitable for performing a remote call."
msgstr ""

msgid "Network error notification in UI."
msgstr ""

msgid "Allow specifying vshard storage group in test helpers."
msgstr ""

msgid "Get UI components from Tarantool UI-Kit"
msgstr ""

msgid ""
"When recovering from snapshot, instances are started read-only. It is "
"still possible to override it by argparse (command line arguments or "
"environment variables)"
msgstr ""

msgid "Editing topology with `failover_priority` argument."
msgstr ""

msgid ""
"Now `cartridge.rpc.get_candidates()` returns value as specified in doc. "
"Also it accepts new option `healthy_only` to filter instances which have "
"membership status healthy."
msgstr ""

msgid "Replicaset weight tooltip in replicasets list"
msgstr ""

msgid "Total buckets count in buckets tooltip"
msgstr ""

msgid "Validation error in user edit form"
msgstr ""

msgid "Leader flag in server details modal"
msgstr ""

msgid ""
"Human-readable error for invalid GrqphQL queries: `Field \"x\" is not "
"defined on type \"String\"`"
msgstr ""

msgid ""
"User management error \"attempt to index nil value\" when one of users "
"has empty e-mail value"
msgstr ""

msgid "Catch `rpc_call` errors when they are performed locally"
msgstr ""

msgid "[1.1.0] - 2019-09-24"
msgstr ""

msgid ""
"New Lua API `admin_edit_topology` has been added to unite multiple "
"others: `admin_edit_replicaset`, `admin_edit_server`, "
"`admin_join_server`, `admin_expel_server`. It's suitable for editing "
"multiple servers/replicasets at once. It can be used for bootstrapping "
"cluster from scratch, joining a server to an existing replicaset, "
"creating new replicaset with one or more servers, editing uri/labels of "
"servers, disabling or expelling servers."
msgstr ""

msgid ""
"Similar API is implemented in a GraphQL mutation "
"`cluster{edit_topology()}`."
msgstr ""

msgid ""
"New GraphQL mutation `cluster { edit_vshard_options }` is suitable for "
"fine-tuning vshard options: `rebalancer_max_receiving`, "
"`collect_lua_garbage`, `sync_timeout`, `collect_bucket_garbage_interval`,"
" `rebalancer_disbalance_threshold`."
msgstr ""

msgid ""
"Both bootstrapping from scratch and patching topology in clusterwide "
"config automatically probe servers, which aren't added to membership yet "
"(earlier it influenced join_server mutation only). This is a prerequisite"
" for multijoin api implementation."
msgstr ""

msgid ""
"WebUI users page is hidden if auth_backend doesn't provide list_users "
"callback."
msgstr ""

msgid "`cartridge.admin_edit_replicaset()`"
msgstr ""

msgid "`cartridge.admin_edit_server()`"
msgstr ""

msgid "`cartridge.admin_join_server()`"
msgstr ""

msgid "`cartridge.admin_expel_server()`"
msgstr ""

msgid "`mutation{ edit_replicaset() }`"
msgstr ""

msgid "`mutation{ edit_server() }`"
msgstr ""

msgid "`mutation{ join_server() }`"
msgstr ""

msgid "`mutation{ expel_server() }`"
msgstr ""

msgid ""
"Protect `users_acl` and `auth` sections when downloading clusterwide "
"config. Also forbid uploading them."
msgstr ""

msgid "[1.0.0] - 2019-08-29"
msgstr ""

msgid ""
"New parameter `topology.replicasets[].all_rw` in clusterwide config for "
"configuring all instances in the replicaset as `read_only = false`. It "
"can be managed with both GraphQL and Lua API `edit_replicaset`."
msgstr ""

msgid ""
"Remote Control server - a replacement for the `box.cfg({listen})`, with "
"limited functionality, independent on `box.cfg`. The server is only to be"
" used internally for bootstrapping new instances."
msgstr ""

msgid ""
"New module `argparse` for gathering configuration options from command-"
"line arguments, environment variables, and configuration files. It is "
"used internally and overrides `cluster.cfg` and `box.cfg` options."
msgstr ""

msgid ""
"Auth parameter `cookie_max_age` is now configurable with GraphQL API. "
"Also now it's stored in clusterwide config, so changing it on a single "
"server will affect all others in cluster."
msgstr ""

msgid ""
"Detect that we run under systemd and switch to syslog logging from "
"stderr. This allows to filter log messages by severity with `journalctl`"
msgstr ""

msgid "Redesign WebUI"
msgstr ""

msgid ""
"The project renamed to **cartridge**. Use `require('cartridge')` instead "
"of `require('cluster')`. All submodules are renamed too."
msgstr ""

msgid ""
"Submodule `cluster.test_helpers` renamed to `cartridge.test-helpers` for "
"consistency."
msgstr ""

msgid ""
"Modifying auth params with GraphQL before the cluster was bootstrapped is"
" now forbidden and returns an error."
msgstr ""

msgid ""
"Introducing a new auth parameter `cookie_renew_age`. When cluster handles"
" an HTTP request with the cookie, whose age in older then specified, it "
"refreshes the cookie. It may be useful to set `cookie_max_age` to a small"
" value (for example 10 minutes), so the user will be logged out after "
"`cookie_max_age` seconds of inactivity. Otherwise, if he's active, the "
"cookie will be updated every `cookie_renew_age` seconds and the session "
"will not be interrupted."
msgstr ""

msgid ""
"Changed configuration options for `cluster.cfg()`: `roles` now is a "
"mandatory table, `workdir` is optional now (defaults to \".\")"
msgstr ""

msgid ""
"Parameter `advertise_uri` is optional now, default value is derived as "
"follows. `advertise_uri` is a compound of `<HOST>` and `<PORT>`. When "
"`<HOST>` isn't specified, it's detected as the only non-local IP address."
" If it can't be determined or there is more than one IP address available"
" it defaults to `\"localhost\"`. When `<PORT>` isn't specified, it's "
"derived from numeric suffix `_<N>` of `TARANTOOL_INSTANCE_NAME`: `<PORT> "
"= 3300+<N>`. Otherwise default `<PORT> = 3301` is used."
msgstr ""

msgid ""
"Parameter `http_port` is derived from instance name too. If it can't be "
"derived it defaults to 8081. New parameter `http_enabled = false` is used"
" to disable it (by default it's enabled)."
msgstr ""

msgid ""
"Removed user `cluster`, which was used internally for orchestration over "
"netbox. Tarantool built-in user `admin` is used instead now. It can also "
"be used for HTTP authentication to access WebUI. Cluster cookie is used "
"as a password in both cases."
msgstr ""

msgid ""
"Two-layer table structure in API, which was deprecated earlier, is now "
"removed completely:"
msgstr ""

msgid "`cartridge.service_registry.*`"
msgstr ""

msgid "`cartridge.confapplier.*`"
msgstr ""

msgid "`cartridge.admin.*`"
msgstr ""

msgid "Instead you can use top-level functions:"
msgstr ""

msgid "`cartridge.config_get_readonly`"
msgstr ""

msgid "`cartridge.config_get_deepcopy`"
msgstr ""

msgid "`cartridge.config_patch_clusterwide`"
msgstr ""

msgid "`cartridge.service_get`"
msgstr ""

msgid "`cartridge.admin_get_servers`"
msgstr ""

msgid "`cartridge.admin_get_replicasets`"
msgstr ""

msgid "`cartridge.admin_probe_server`"
msgstr ""

msgid "`cartridge.admin_join_server`"
msgstr ""

msgid "`cartridge.admin_edit_server`"
msgstr ""

msgid "`cartridge.admin_expel_server`"
msgstr ""

msgid "`cartridge.admin_enable_servers`"
msgstr ""

msgid "`cartridge.admin_disable_servers`"
msgstr ""

msgid "`cartridge.admin_edit_replicaset`"
msgstr ""

msgid "`cartridge.admin_get_failover`"
msgstr ""

msgid "`cartridge.admin_enable_failover`"
msgstr ""

msgid "`cartridge.admin_disable_failover`"
msgstr ""

msgid "[0.10.0] - 2019-08-01"
msgstr ""

msgid ""
"Cluster can now operate without vshard roles (if you don't need "
"sharding). Deprecation warning about implicit vshard roles isn't issued "
"any more, they aren't registered unless explicitly specified either in "
"`cluster.cfg({roles=...})` or in `dependencies` to one of user-defined "
"roles."
msgstr ""

msgid ""
"New role flag `hidden = true`. Hidden roles aren't listed in "
"`cluster.admin.get_replicasets().roles` and therefore in WebUI. Hidden "
"roles are supposed to be a dependency for another role, yet they still "
"can be enabled with `edit_replicaset` function (both Lua and GraphQL)."
msgstr ""

msgid ""
"New role flag: `permanent = true`. Permanent roles are always enabled. "
"Also they are hidden implicitly."
msgstr ""

msgid ""
"New functions in cluster test_helpers - `Cluster:upload_config(config)` "
"and `Cluster:download_config()`"
msgstr ""

msgid ""
"`cluster.call_rpc` used to return 'Role unavailable' error as a first "
"argument instead of `nil, err`. It can appear when role is specified in "
"clusterwide config, but wasn't initialized properly. There are two "
"reasons for that: race condition, or prior error in either role `init` or"
" `apply_config` methods."
msgstr ""

msgid "[0.9.2] - 2019-07-12"
msgstr ""

msgid ""
"Update frontend-core dependency which used to litter `package.loaded` "
"with tons of JS code"
msgstr ""

msgid "[0.9.1] - 2019-07-10"
msgstr ""

msgid "Support for vshard groups in WebUI"
msgstr ""

msgid ""
"Uniform handling vshard group 'default' when multiple groups aren't "
"configured"
msgstr ""

msgid "Requesting multiple vshard groups info before the cluster was bootstrapped"
msgstr ""

msgid "[0.9.0] - 2019-07-02"
msgstr ""

msgid "User management page in WebUI"
msgstr ""

msgid "Configuring multiple isolated vshard groups in a single cluster"
msgstr ""

msgid ""
"Support for joining multiple instances in a single call to "
"config_patch_clusterwide"
msgstr ""

msgid "Integration tests helpers"
msgstr ""

msgid "GraphQL API `known_roles` format now includes roles dependencies"
msgstr ""

msgid ""
"`cluster.rpc_call` option `remote_only` renamed to `prefer_local` with "
"the opposite meaning"
msgstr ""

msgid "Don't display renamed or removed roles in webui"
msgstr ""

msgid "Uploading config without a section removes it from clusterwide config"
msgstr ""

msgid "[0.8.0] - 2019-05-20"
msgstr ""

msgid "Specifying role dependencies"
msgstr ""

msgid "Set read-only option for slave nodes"
msgstr ""

msgid "Labels for servers"
msgstr ""

msgid "Admin http endpoint changed from /graphql to /admin/api"
msgstr ""

msgid "Graphql output now contains null values for empty objects"
msgstr ""

msgid ""
"Deprecate implicity of vshard roles `'cluster.roles.vshard-storage'`, "
"`'cluster.roles.vshard-router'`. Now they should be specified explicitly "
"in `cluster.cfg({roles = ...})`"
msgstr ""

msgid ""
"`cluster.service_get('vshard-router')` now returns `cluster.roles.vshard-"
"router` module instead of `vshard.router`"
msgstr ""

msgid ""
"`cluster.service_get('vshard-storage')` now returns `cluster.roles"
".vshard-storage` module instead of `vshard.storage`"
msgstr ""

msgid "`cluster.admin.bootstrap_vshard` now can be called on any instance"
msgstr ""

msgid "Operating vshard-storage roles before vshard was bootstrapped"
msgstr ""

msgid "[0.7.0] - 2019-04-05"
msgstr ""

msgid "Failover priority configuration using WebUI"
msgstr ""

msgid "Remote calls across cluster instances using `cluster.rpc` module"
msgstr ""

msgid "Displaying box.cfg and box.info in WebUI"
msgstr ""

msgid "Authorization for HTTP API and WebUI"
msgstr ""

msgid "Configuration download/upload via WebUI"
msgstr ""

msgid ""
"Lua API documentation, which you can read with `tarantoolctl rocks doc "
"cluster` command."
msgstr ""

msgid ""
"Instance restart now triggers config validation before roles "
"initialization"
msgstr ""

msgid "Update WebUI design"
msgstr ""

msgid "Lua API changed (old functions still work, but issue warnings):"
msgstr ""

msgid "`cluster.confapplier.*` -> `cluster.config_*`"
msgstr ""

msgid "`cluster.service_registry.*` -> `cluster.service_*`"
msgstr ""

msgid "[0.6.3] - 2019-02-08"
msgstr ""

msgid ""
"Cluster used to call 'validate()' role method instead of documented "
"'validate_config()', so it was added. The undocumented 'validate()' still"
" may be used for the sake of compatibility, but issues a warning that it "
"was deprecated."
msgstr ""

msgid "[0.6.2] - 2019-02-07"
msgstr ""

msgid "Minor internal corner cases"
msgstr ""

msgid "[0.6.1] - 2019-02-05"
msgstr ""

msgid "UI/UX: Replace \"bootstrap vshard\" button with a noticable panel"
msgstr ""

msgid "UI/UX: Replace failover panel with a small button"
msgstr ""

msgid "[0.6.0] - 2019-01-30"
msgstr ""

msgid ""
"Ability to disable vshard-storage role when zero-weight rebalancing "
"finishes"
msgstr ""

msgid "Active master indication during failover"
msgstr ""

msgid "Other minor improvements"
msgstr ""

msgid "New frontend core"
msgstr ""

msgid "Dependencies update"
msgstr ""

msgid "Call to `join_server` automatically does `probe_server`"
msgstr ""

msgid "Servers filtering by roles, uri, alias in WebUI"
msgstr ""

msgid "[0.5.1] - 2018-12-12"
msgstr ""

msgid "WebUI errors"
msgstr ""

msgid "[0.5.0] - 2018-12-11"
msgstr ""

msgid "Graphql mutations order"
msgstr ""

msgid ""
"Callbacks in user-defined roles are called with `is_master` parameter, "
"indicating state of the instance"
msgstr ""

msgid ""
"Combine `cluster.init` and `cluster.register_role` api calls in single "
"`cluster.cfg`"
msgstr ""

msgid "Eliminate raising exceptions"
msgstr ""

msgid "Absorb http server in `cluster.cfg`"
msgstr ""

msgid "Support of vshard replicaset weight parameter"
msgstr ""

msgid "`join_server()` `timeout` parameter to make call synchronous"
msgstr ""

msgid "[0.4.0] - 2018-11-27"
msgstr ""

msgid "Fixed/Improved"
msgstr ""

msgid "Uncaught exception in WebUI"
msgstr ""

msgid "Indicate when backend is unavailable"
msgstr ""

msgid "Sort servers in replicaset, put master first"
msgstr ""

msgid "Cluster mutations are now synchronous, except joining new servers"
msgstr ""

msgid "Lua API for temporarily disabling servers"
msgstr ""

msgid "Lua API for implementing user-defined roles"
msgstr ""

msgid "[0.3] - 2018-10-30"
msgstr ""

msgid "Config structure **incompatible** with v0.2"
msgstr ""

msgid "Explicit vshard master configuration"
msgstr ""

msgid "Automatic failover (switchable)"
msgstr ""

msgid "Unit tests"
msgstr ""

msgid "[0.2] - 2018-10-01"
msgstr ""

msgid "Allow vshard bootstrapping from ui"
msgstr ""

msgid "Several stability improvements"
msgstr ""

msgid "[0.1] - 2018-09-25"
msgstr ""

msgid "Basic functionality"
msgstr ""

msgid "Integration tests"
msgstr ""

msgid "Luarock-based packaging"
msgstr ""

msgid "Gitlab CI integration"
msgstr ""

#~ msgid "Show how-to-connect-demo instructions on every page in WebUI."
#~ msgstr ""

#~ msgid "Expose membership options with argparse."
#~ msgstr ""

#~ msgid "Code applying error in Code editor."
#~ msgstr ""

#~ msgid ""
#~ "New GraphQL API fields in `servers{ "
#~ "boxinfo{ cartridge }}`: `version`, `state`,"
#~ " `error`."
#~ msgstr ""

#~ msgid ""
#~ "Remember last opened file in code "
#~ "editor to local storage. Opens first "
#~ "file when local storage empty."
#~ msgstr ""

#~ msgid "File tree expanded by default."
#~ msgstr ""

#~ msgid "New internal module to hanle `.tar` files."
#~ msgstr ""

#~ msgid ""
#~ "Add an ability to hide certain "
#~ "WebUI pages by specifying "
#~ "`cartridge.cfg({webui_blacklist = {'/admin/code', "
#~ "...}})`."
#~ msgstr ""

#~ msgid ""
#~ "New functions `cartridge.get_shema()` and "
#~ "`cartridge.set_shema(schema)` for get/set "
#~ "clusterwide DDL schema. They are "
#~ "reference `_G.cartridge_get_schema` and "
#~ "`_G.cartridge_set_schema`."
#~ msgstr ""

#~ msgid ""
#~ "New GraphQL API to obtain more "
#~ "details on replication status `cluster{ "
#~ "issues{ level message ... }}`."
#~ msgstr ""

#~ msgid "Add option for clusterwide env in test helpers."
#~ msgstr ""

#~ msgid ""
#~ "New GraphQL API fields in `cluster{ "
#~ "self }`: `app_name`, `instance_name`."
#~ msgstr ""

#~ msgid "Network error shows with fixed splash panel instead of notification."
#~ msgstr ""

#~ msgid "Remove redundant topology availability checks."
#~ msgstr ""

#~ msgid "DDL failure if spaces is `null` in input schema."
#~ msgstr ""

#~ msgid ""
#~ "Content of `cluster_cookie` is checked "
#~ "for absence of special characters so "
#~ "it doesn't break the authotization. "
#~ "Allowed symbols are `[a-zA-Z0-9_.~-]`."
#~ msgstr ""

#~ msgid ""
#~ "Drop remote-control connections after "
#~ "full-featured `box.cfg` becomes available "
#~ "to prevent clients from using limited"
#~ " functionality for too long. During "
#~ "instance recovery remote-controll won't "
#~ "accept any connections: clients wait for"
#~ " box.cfg to finish recvovery."
#~ msgstr ""

#~ msgid "Replicaset weight input in WebUI accepts float values."
#~ msgstr ""

#~ msgid "Frontend core update: fix route mapping"
#~ msgstr ""

#~ msgid "[2.1.0] - 2020-04-16"
#~ msgstr ""

#~ msgid ""
#~ "Implement stateful failover mode. You "
#~ "can read more in \"Failover "
#~ "architecture\" documentation topic (see "
#~ "`failover.md`)."
#~ msgstr ""

#~ msgid ""
#~ "New option in `cartridge.cfg({upgrade_schema=...})`"
#~ " to automatically upgrade schema to "
#~ "modern tarantool version (only for "
#~ "leader). It also has been added "
#~ "for `argparse`."
#~ msgstr ""

#~ msgid ""
#~ "Extend GraphQL `issues` API with various"
#~ " topics: `replication`, `failover`, `memory`, "
#~ "`clock`. Make thresholds configurable via "
#~ "argparse."
#~ msgstr ""

#~ msgid ""
#~ "Make GraphQL validation stricter: scalar "
#~ "values can't have sub-selections; "
#~ "composite types must have sub-"
#~ "selections; omitting non-nullable arguments"
#~ " in variable list is forbidden. Your"
#~ " code **may be affected** if it "
#~ "doesn't conform GraphQL specification."
#~ msgstr ""

#~ msgid ""
#~ "GraphQL query `auth_params` returns "
#~ "\"fullname\" (if it was specified) "
#~ "instead of \"username\"."
#~ msgstr ""

#~ msgid "Update `errors` dependency to 2.1.3."
#~ msgstr ""

#~ msgid "Update `ddl` dependency to 1.1.0."
#~ msgstr ""

#~ msgid "Properly handle nested input object in GraphQL:"
#~ msgstr ""

#~ msgid ""
#~ "mutation($uuid: String!) {\n"
#~ "  cluster { edit_topology(servers: [{uuid: $uuid ...}]) {} }\n"
#~ "}"
#~ msgstr ""

#~ msgid "Show WebUI notification on successful config upload."
#~ msgstr ""

#~ msgid "Repair GraphQL queries `add_user`, `issues` on uninitialized instance."
#~ msgstr ""

#~ msgid "Show \"You are here\" marker."
#~ msgstr ""

#~ msgid "Show application and instance names in app title."
#~ msgstr ""

#~ msgid "Indicate replication and failover issues."
#~ msgstr ""

#~ msgid "Fix bug with multiple menu items selected."
#~ msgstr ""

#~ msgid "Refactor pages filtering, forbid opening blacklisted pages."
#~ msgstr ""

#~ msgid "Enable JS chunks caching."
#~ msgstr ""

#~ msgid "Show \"You are here\" marker in webui."
#~ msgstr ""

#~ msgid "Implement stateful failover mode."
#~ msgstr ""

#~ msgid "Add new field Graphql field `cluster{ issues {topic} }`"
#~ msgstr ""

#~ msgid "Extend issues API for stateful failover"
#~ msgstr ""

#~ msgid ""
#~ "New option in `cartridge.cfg({upgrade_schema=...},"
#~ " ...)` to perform auto upgrade schema"
#~ " to actual tarantool version (only "
#~ "for leader). It also has bean "
#~ "added for `argparse`."
#~ msgstr ""

#~ msgid ""
#~ "GraphQL validation significantly improved: "
#~ "scalar values can't have subselections; "
#~ "composite types must have subselections; "
#~ "omitting non-nullable arguments in "
#~ "variable list is forbidden."
#~ msgstr ""

#~ msgid "Indicate replication and failover issues in WebUI."
#~ msgstr ""

#~ msgid "Fix quering failure `cluster {issues {...} }` on uninitialized instance"
#~ msgstr ""

#~ msgid "Validation of `console_sock` length."
#~ msgstr ""

#~ msgid "Avoid trimming `console_sock` it it's name is too long."
#~ msgstr ""

#~ msgid "Fix fd leak during box recovery."
#~ msgstr ""

#~ msgid "Support `console_sock` option in stateboard"
#~ msgstr ""

#~ msgid "[2.1.1] - 2020-04-20"
#~ msgstr ""
